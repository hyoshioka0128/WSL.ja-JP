### YamlMime:FAQ
metadata:
  title: Windows Subsystem for Linux に関する FAQ
  description: "\"WSL で何ができますか\" などの、Linux 用 Windows サブシステムについてよく寄せられる質問 (FAQ) への回答をご確認いただけます。"
  keywords: BashOnWindows, bash, wsl, windows, windowssubsystem, faq
  ms.date: 09/15/2020
  ms.topic: article
  ms.assetid: 129101ed-b88a-43c2-b6a2-cd2c4ff6fee1
  ms.localizationpriority: high
  ms.openlocfilehash: 8f4ab1aea6accc1f221e664dd882603edf54185d
  ms.sourcegitcommit: 7f4a813fdcbfca65412ecb2311f0b5c8b546fef8
  ms.translationtype: MT
  ms.contentlocale: ja-JP
  ms.lasthandoff: 04/14/2021
  ms.locfileid: "107493324"
title: Windows Subsystem for Linux に関してよく寄せられる質問
summary: ''
sections:
- name: 無視
  questions:
  - question: >
      Windows Subsystem for Linux (WSL) とは何ですか。
    answer: >
      Windows Subsystem for Linux (WSL) は Windows 10 の機能の1つであり、従来の Windows デスクトップやアプリと並行して Windows 上でネイティブ Linux コマンドラインツールを直接実行することができます。


      詳しくは、[詳細ページ](./about.md)をご覧ください。
  - question: >
      WSL の対象ユーザーは誰ですか。
    answer: >
      これは、主に開発者、特に web 開発者、オープンソースプロジェクトでの作業、または Linux サーバー環境へのデプロイのためのツールです。 WSL は、Bash、一般的な Linux ツール (、など) `sed` `awk` と linux 最初のフレームワーク (Ruby、Python など) を使用していても、Windows の生産性向上ツールを利用している人を対象としています。
  - question: >
      WSL で何ができますか。
    answer: "WSL を使用すると、任意の配布方法 (Ubuntu、Debian、OpenSUSE、Kali、Alpine など) を使用して、Bash シェルで Linux を実行できます。 Bash を使用すると、コマンド ライン Linux ツールおよびアプリを実行できます。 たとえば、「`lsb_release -a`」と入力して Enter キーを押すと、現在実行中の Linux ディストリビューションの詳細が表示されます。\n\n![ディストリビューションの詳細のスクリーンショット](media/distro.png)\n\nLinux Bash シェル内からローカルコンピューターのファイルシステムにアクセスすることもできます。ローカルドライブはフォルダーの下にマウントさ `/mnt` れています。 たとえば、 `C:` ドライブは `/mnt/c` の下にマウントされます。  \n\n![マウントされた C ドライブのスクリーンショット](media/ls.png)\n"
  - question: >
      WSL が組み込まれた一般的な開発ワークフローについて説明してください。
    answer: >
      WSL は開発者を対象としており、内部開発ループの一部としての使用を目的としています。 たとえば、Sam が CI/CD パイプライン (継続的インテグレーションおよび継続的デリバリー) を作成しており、クラウドにデプロイする前に、まずローカル コンピューター (ノート PC) でそれをテストしたいと思っているとします。 Sam は WSL (速度とパフォーマンスを向上させるには WSL 2) を有効にして、ローカル (ノート PC) で本物の Linux Ubuntu インスタンスと、任意の Bash コマンドとツールを使用することができます。 開発パイプラインをローカルで検証したら、Sam はその CI/CD パイプラインをクラウド (Azure) にプッシュできます。そうするには、これを Docker コンテナーに格納し、そのコンテナーをクラウド インスタンスにプッシュします。こうして、運用に対応した Ubuntu VM 上でこれを実行できます。
  - question: >
      Bash とは何ですか。
    answer: >
      [Bash](https://en.wikipedia.org/wiki/Bash_%28Unix_shell%29) は、広く使われているテキスト ベースのシェルおよびコマンド言語です。 これは、Ubuntu およびその他の Linux ディストリビューション内と macOS に含まれる既定のシェルです。 ユーザーは、シェルにコマンドを入力して、スクリプトを実行したり、コマンドやツールを実行したりして多くのタスクを行います。
  - question: >
      この処理のしくみ
    answer: >
      基礎となるテクノロジの詳細については、[ブログ](https://devblogs.microsoft.com/commandline/a-deep-dive-into-how-wsl-allows-windows-to-access-linux-files/)を参照してください。
  - question: >
      VM で Linux ではなく WSL を使用するのはなぜですか。
    answer: >
      WSL は、必要なリソース (CPU、メモリ、およびストレージ) が完全な仮想マシンよりも少なくて済みます。 また、WSL を使用すると、Linux コマンド ライン ツールおよびアプリを Windows コマンド ライン、デスクトップおよびストア アプリと共に実行したり、Linux 内から Windows ファイルにアクセスしたりすることもできます。 これにより、必要に応じて、同じファイル セットに対して Windows アプリと Linux コマンド ライン ツールを使用できます。
  - question: >
      たとえば、Windows ではなく Linux 上で Ruby を使用するのはなぜですか。
    answer: >
      一部のクロスプラットフォーム ツールは、それらが実行される環境が Linux のように動作することを前提として構築されました。 たとえば、一部のツールでは、非常に長いファイル パスにアクセスできることや、特定のファイルまたはフォルダーが存在することを前提としています。 これにより、Linux とは動作が異なる事が多い Windows で問題が発生することがよくあります。


      Ruby や node のような多くの言語は、たいていの場合、Windows に移植され、非常にうまく動作します。 ただし、すべての Ruby Gem または node/NPM ライブラリ所有者が、Windows をサポートするためにライブラリを移植するわけではなく、多くのものに Linux 固有の依存関係があります。 これにより、このようなツールやライブラリを使用して構築されたシステムはビルドから悪影響を受ける場合が多く、Windows で実行時エラーや望ましくない動作が発生することがあります。


      これらは、多くのユーザーが Windows のコマンド ライン ツールの向上を Microsoft に依頼する原因となった問題の一部に過ぎません。また、こうした要因から、Microsoft が Canonical と提携して、ネイティブ Bash と Linux コマンド ライン ツールを Windows で実行できるようにすることになりました。
  - question: >
      PowerShell においてこれは何を意味しますか。
    answer: >
      OSS プロジェクトでの作業中、PowerShell プロンプトから Bash を実行すると非常に役立つシナリオが多数あります。 Bash のサポートは補完的なものであり、Windows でのそのコマンド ラインの価値を高め、PowerShell と PowerShell コミュニティでその他の一般的なテクノロジを利用できるようにします。


      詳細については、PowerShell チームのブログ「[Windows の Bash:それがすばらしい理由と PowerShell における意味](https://devblogs.microsoft.com/powershell/bash-for-windows-why-its-awesome-and-what-it-means-for-powershell/)」をお読みください
  - question: >
      WSL ですべての Linux アプリを実行できますか。
    answer: "いいえ。 WSL は、Bash およびコア Linux コマンド ライン ツールを必要とするユーザーが Windows 上でそれらを実行できるようにすることを目的としたツールです。\n\nWSL はまだ GUI デスクトップやアプリケーション (Gnome、KDE など) をサポートしていません。更新については、 [コマンドラインのブログ](https://devblogs.microsoft.com/commandline/whats-new-in-the-windows-subsystem-for-linux-september-2020/#gui-apps) を参照してください。  \n\nまた、多くの一般的なサーバー アプリケーション (Redis など) を実行できる場合でも、実稼働サービスをホストする目的には WSL をお勧めしません。Microsoft は、Azure、Hyper-V、Docker で実稼働 Linux ワークロードを実行するためのさまざまなソリューションを提供しています。 \n"
  - question: >
      WSL はどの Windows SKU に含まれていますか。
    answer: >
      Windows Subsystem for Linux は、Windows 10 Anniversary および Creators Update 以降の Windows デスクトップ バージョンで使用できます。


      Fall Creators Update 以降では、WSL は Windows のデスクトップとサーバーの両方の SKU で使用できるようになります。
  - question: >
      WSL はどのようなプロセッサをサポートしていますか。
    answer: WSL は x64 および ARM の CPU をサポートしています。
  - question: >
      C: ドライブにアクセスするにはどうすればよいですか。
    answer: >
      ローカルコンピューター上のハードドライブのマウントポイントが自動的に作成され、Windows ファイルシステムに簡単にアクセスできるようになります。


      **/mnt/\<drive letter>/**


      使用例は、c:\ にアクセスする `cd /mnt/c` です。
  - question: "Git Credential Manager をセットアップするにはどうすればよいですか。 (WSL で Windows Git アクセス許可を使用するにはどうすればよいですか。) \n"
    answer: >
      Git Credential Manager を使用すると、Azure Active Directory や 2 要素認証などの複雑な認証パターンがある場合でも、リモート Git サーバーを認証できます。 Git Credential Manager は、GitHub などのサービスの認証フローに統合されています。ユーザーがホスティング プロバイダーに対して認証されると、新しい認証トークンが要求されます。 その後、そのトークンは Windows 資格情報マネージャーに安全に格納されます。 2 回目以降は、Git を使用してホスティング プロバイダーと通信することができ、再認証は必要ありません。 Windows 資格情報マネージャーにあるトークンへのアクセスだけが行われることになります。


      WSL ディストリビューションで使用するように Git Credential Manager をセットアップするには、ディストリビューションを開き、次のコマンドを入力します。


      ```Bash

      git config --global credential.helper "/mnt/c/Program\ Files/Git/mingw64/libexec/git-core/git-credential-manager.exe"

      ```


      これで、WSL ディストリビューション内で実行するすべての Git 操作で、資格情報マネージャーが使用されるようになります。 ホスト用に既にキャッシュされている資格情報がある場合は、それらへのアクセスが資格情報マネージャーから行われます。 そうでない場合は、Linux コンソールを使用しているとしても、資格情報を要求するダイアログ応答が表示されます。


      このサポートは、[Linux 用 Windows サブシステムと Windows そのものとの相互運用性](./interop.md)に依存しています。
  - question: >
      Linux アプリで Windows ファイルをどのように使用しますか。
    answer: "WSL の利点の 1 つは、Windows と Linux の両方のアプリまたはツールを経由してファイルにアクセスできることです。 \n\nWSL では、コンピューターの固定ドライブを Linux ディストリビューションの `/mnt/<drive>` フォルダーの下にマウントします。 たとえば、 `C:` ドライブは `/mnt/c/` の下にマウントされます。\n\nマウントされたドライブを使用すると、[Visual Studio](https://visualstudio.microsoft.com/vs/) または[VS Code](https://code.visualstudio.com/)を使用して、たとえば `C:\\dev\\myproj\\` 内のコードを編集したり、`/mnt/c/dev/myproj` を介して同じファイルにアクセスして Linux でそのコードをビルド/テストしたりできます。\n\n> **重要な注意** 事項: wsl を使用する際の主な制限事項の1つは、Windows アプリまたはツールを使用して Linux ディストリビューションのファイルシステムのファイルに直接アクセスしたり変更したりすることができないことです。 以下を参照してください。[Windows アプリやツールを使用して Linux ファイルを変更しない](https://devblogs.microsoft.com/commandline/do-not-change-linux-files-using-windows-apps-and-tools/)\n"
  - question: >
      Linux ドライブのファイルはマウントされた Windows ドライブのものとは異なりますか。
    answer: >
      1. Linux ルート (つまり `/`) の下にあるファイルは、Linux 固有の性質を模倣する WSL によって制御されます。次のようなものが含まれますが、これらに限定されません。
         * 無効な Windows ファイル名の文字を含むファイル
         * 管理者以外のユーザー用に作成されたシンボリック リンク
         * chmod および chown を使用したファイル属性の変更
         * ファイル/フォルダーの大文字と小文字の区別

      2. マウントされたドライブのファイルは Windows によって制御され、次のように動作します。
         * 大文字と小文字の区別をサポート
         * すべてのアクセス許可は、Windows アクセス許可を最適に反映するように設定
  - question: >
      apt-get upgrade を実行すると、多くのエラーが発生するのはなぜですか。
    answer: "一部のパッケージでは、Microsoft がまだ実装していない機能が使用されています。 たとえば、`udev` はまだサポートされていないため、`apt-get upgrade` エラーがいくつか発生します。\n\n`udev` に関連する問題を修正するには、次の手順に従います。\n\n1. 次の内容を `/usr/sbin/policy-rc.d` に記述して、変更を保存します。\n\n    ```bash\n    #!/bin/sh\n    exit 101\n    ```\n\n2. 実行のアクセス許可を `/usr/sbin/policy-rc.d` に追加します\n\n    ```bash\n    chmod +x /usr/sbin/policy-rc.d\n    ```\n  \n3. 次のコマンドを実行します\n\n    ```bash\n    dpkg-divert --local --rename --add /sbin/initctl\n    ln -s /bin/true /sbin/initctl\n    ```\n"
  - question: >
      WSL ディストリビューションをアンインストールするにはどうすればよいですか。
    answer: "1709 (16299) より前のビルドでは、コマンド プロンプトを開き、次を実行します。\n\n  ```batchfile\n  lxrun /uninstall /full\n  ```\n  \nストアからインストールされた WSL ディストリビューションは、他の Windows アプリと同様にアンインストールできます。アプリタイルを右クリックして [アンインストール] をクリックするか、 [ `Remove-AppxPackage` コマンドレット](https://docs.microsoft.com/powershell/module/appx/remove-appxpackage)を使用して PowerShell を使用します)。\n"
  - question: >
      ping によってアクセス拒否エラーが発生するのはなぜですか。
    answer: >
      14926 より前の WSL ビルドでは、WSL で管理者特権のコンソールを使用して ping を実行する必要がありました。 この問題は、ビルド14926 以降で修正されました。
  - question: >
      OpenSSH サーバーを実行するにはどうすればよいですか。
    answer: >
      WSL で OpenSSH を実行するには、Windows の管理者特権が必要です。 OpenSSH サーバーを実行するには、管理者として Bash on Ubuntu on Windows を実行するか、管理者特権を使用して CMD/PowerShell プロンプトから bash.exe を実行します。
  - question: >
      インストールしようとすると、"エラー:0x80040306" が表示されるのはなぜですか。
    answer: >
      WSL は、従来のコンソールでの実行をサポートしていません。 従来のコンソールをオフにするには、以下を実行します。


      1. WSL、PowerShell、または Cmd を開きます

      1. タイトル バーを右クリックして、[プロパティ] を選択し、[従来のコンソールを使う] をオフにします

      1. [OK] をクリックします。
  - question: >
      Windows のアップグレード後に bash.exe を実行すると、"エラー:0x80040154" が表示されるのはなぜですか。
    answer: >
      Windows Update 時に "Windows Subsystem for Linux" 機能が無効になる可能性があります。 その場合は、この Windows 機能を再度有効にする必要があります。 "Windows Subsystem for Linux" 機能を有効にする手順については、[インストール ガイド](./install-win10.md)をご覧ください。
  - question: >
      WSL の表示言語を変更するにはどうすればよいですか。
    answer: >
      WSL インストールでは、Windows インストールのロケールに合わせて Ubuntu ロケールを自動的に変更しようとします。 この動作が不要な場合は、次のコマンドを実行して、インストールの完了後に Ubuntu ロケールを変更できます。 この変更を有効にするには、bash.exe を再起動する必要があります。


      次の例は、ロケールを en-US に変更します。


      ```bash

      sudo update-locale LANG=en_US.UTF8

      ```
  - question: >
      WSL からインターネットにアクセスできないのはなぜですか。
    answer: >
      一部のユーザーにより、WSL でのインターネット アクセスをブロックする特定のファイアウォール アプリケーションに関する問題が報告されています。 報告されているファイアウォールは次のとおりです。


      1. Kaspersky

      2. AVG

      3. Avast

      4. Symantec Endpoint Protection

      5. F-セキュリティ保護


      ファイアウォールをオフにすると、アクセスできる場合があります。 場合によっては、ファイアウォールをインストールするだけでアクセスがブロックされるようです。
  - question: >
      Windows の WSL からポートにアクセスするにはどうすればよいですか。
    answer: >
      WSL は Windows で実行されているため、Windows の IP アドレスを共有します。 そのため、localhost 上の任意のポートにアクセスできます。たとえば、ポート 1234 に Web コンテンツがあるとすると、 https://localhost:1234 を Windows ブラウザーに入力できます。
  - question: >
      WSL ディストリビューションをバックアップしたり、別のドライブに移動したりするにはどうすればよいですか。
    answer: "ディストリビューションをバックアップまたは移動する最適な方法は、Windows バージョン 1809 以降で使用できるエクスポート/インポート コマンドを使用することです。 `wsl --export` コマンドを使用して、ディストリビューション全体を tarball にエクスポートできます。 その後、`wsl --import` コマンドを使用してこのディストリビューションを WSL にインポートし直すことができます。これにより、インポート用の新しいドライブの場所に名前を付けて、WSL ディストリビューションをバックアップして状態を保存 (または移動) できます。 \n\nAppData フォルダー (Windows バックアップなど) のファイルをバックアップする従来のバックアップサービスでは、Linux ファイルが破損しないことに注意してください。\n"
  - question: >
      フィードバックはどこで提供できますか。
    answer: >-
      複数のチャネルを通じて、フィードバックを送ったり、質問したりできます。


      技術上の問題がある場合や、新機能のリクエストをしたい場合は、GitHub の問題の追跡ツールにアクセスしてください。


      * [GitHub の問題の追跡ツール](https://github.com/Microsoft/BashOnWindows/issues)


      WSL の最新ニュースを入手するには、以下をご利用ください。


      * [Microsoft のコマンド ライン チームのブログ](https://devblogs.microsoft.com/commandline/)

      * Twitter。 ニュース、更新などを確認するには、Twitter で [@craigaloewen](https://twitter.com/craigaloewen) をフォローしてください。
